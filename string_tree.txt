/*
  صل عل محمد
   if (u == Abdel-Aziz Mostafa )   love u <3 ;

*/
#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;
template<typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

template <typename  t>
ostream  &operator <<(ostream &os ,vector<t> & v){ int s=v.size(); for (int i=0;i<s;i++) os<<v[i]<<" "; cout<<"\n"; return os;}

template <typename t >
istream  &operator>> (istream & is , vector <t>  & v){ int s=v.size(); for (int i=0;i<s;i++) is>>v[i];  return is;}

template<typename t>
ostream  &operator <<(ostream &os ,pair<t,t>& pr ){ cout<<pr.first<<" "<<pr.second<<" " ; return os;}

#define int long long
#define N   1000001
#define mod 1000000007


int it = 0 , n;
vector<int>mp(N);
vector<string>  str(N);
vector<vector<pair<int,int> > > g(N);


void build(int l , int r  , int idx  ,int key){

        char ch;
        int L = l , cnt = 0;
        for (int i =l ; i<=r; ++i){
                 string &x  = str[i];
                 if (idx>=x.size()){
                        L = i+1;
                        continue;
                 }
                 cnt++;
                // if (key ==5 )cout<<L<<" "<<i<<"\n";
                 if ((i+1<=r and str[i+1][idx]!=x[idx])|| (i==r)){
                          mp[++it] = x[idx];
                          g[key].push_back({it, cnt});
                          build(L,i,idx+1 ,it);

                          cnt=0;
                          L=i+1;
                 }


        }


}

void testcase(){

               int ans  = 0 , sum = 0;
               cin>>n;
               for (int   i = 0 ; i  < n ; ++i){
                           cin>>str[i];
                           sum+=str[i].size();
               }
              // system("cls");
               sort(str.begin() ,str.begin() +n);


               build(0,n-1, 0 , 0);


               for (int i = 0 ; i  <n ; ++i){
                        ans += n*(str[i].size()) + sum;
               }



               for(int  idx =0  ; idx < n ;++idx){
                        string &x=  str[idx];
                        int it = 0;
                        for(int  i =  x.size()-1 ; i >=0 ; --i){
                                 bool ok = 0 ;
                                 for (auto &[key , cnt] :  g[it]){
                                           //cout<<x<<" "<<x[i]<<" "<<key<<" "<<cnt<<" \n";
                                           if (mp[key]==x[i]){
                                               ans-=cnt*2;
                                               ok=1;
                                               it = key;
                                               break;

                                           }
                                 }
                                 //cout<<x<<" "<<x[i]<<" "<<ok<<"\n";
                                 if (!ok)break;

                        }

               }
               cout<<ans<<"\n";








}

signed main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);   cout.tie(0);


    int tc=1 ;
    //cin>>tc;
    while(tc--){
        testcase();
    }

/*
3
1 2 2
1 1 1
*/



}
