/*
   صل عل محمد
   if (u == Abdel-Aziz Mostafa )   love u <3 ;
  دايما احلم ربنا المنان

*/
#include<bits/stdc++.h>
using namespace std;

#define N 300007
//#define mod 1000
#define int long long
#define F first
#define S second

struct item {
     int a=0;
     int mp[41] = {0} ;
};
int mod;
struct segtree{
    vector<item> val;

    int sz =1;
    segtree(int n){
        while(sz<n)sz*=2;
        val.resize(2*sz);
    }

    item  NEUTRAl_ElEMENT   ;
    item merge(item& m1 ,item& m2 , int x=-1){


          item res;
          res . a = m1.a +m2.a;
          int cnt  =  0 ;
          for (int i = 40; i>=0; --i){
            res.a+= cnt * m2.mp[i];
            cnt+=m1.mp[i];
            res.mp[i] =m1.mp[i] +m2.mp[i];
          }
          return res;
    }
    item single(int v){
       item res;
       res.mp[v]++;
       res.a = 0 ;
       return res;
    }
    void Set(int i  ,int v,int x , int lx  ,int rx){
        if (rx-lx==1){
            val[x] =  single(v) ;
            return  ;
        }
        int md  = (lx+rx)/2;
        if (i<md)
            Set(i  ,v ,  2*x+1 ,lx, md);
        else
            Set(i , v, 2*x+2 , md  , rx);

        val[x] =merge(val[2*x+1] ,val[2*x+2], x) ;
    }
    void Set(int i  ,int v){
        Set(i , v,  0 , 0 ,sz);
    }
    item calc(int  l , int r , int x , int lx , int rx ){
          if (lx>=r ||rx<=l)
            return NEUTRAl_ElEMENT;
          if (lx>=l and rx<=r){
            return val[x];
          }
          int md  = (lx+rx)/2;
          item c1 =calc(l ,r  ,2*x+1  , lx  , md)  ,
          c2 =calc(l ,r  ,2*x+2  ,md  , rx) ;
        return merge(c1 ,
             c2);


    }
    int calc(int l , int r   ){
        return calc(l,r  , 0 , 0,sz).a;
    }


};
signed main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);      cout.tie(0);

    int n, m ;
    cin>>n>>m;
    segtree sg(n);
    for (int  i = 0  ; i  < n ; ++i){
        int v;
        cin>>v;
        sg.Set(i , v) ;
    }

    for (int  i = 0 ; i  <m; ++i){
        int q; cin>>q;
        if (q==2){
            int i  , v;

            cin>>i>>v;
            i--;
            sg.Set(i , v) ;
            continue ;
        }
        int  l  ,r ;
        cin>>l>>r;
        l--;
      cout<<sg.calc( l  ,r ) <<"\n";

    }

}
